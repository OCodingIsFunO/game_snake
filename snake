#!/usr/bin/env python

import random
import time
import RPi.GPIO as gpio
from luma.core.interface.serial import spi, noop
from luma.led_matrix.device import max7219
from luma.core.legacy import text, show_message
from luma.core.render import canvas
gpio.setmode(gpio.BOARD)

serial = spi(port=0, device=0, gpio=noop())
device = max7219(serial, height=8, width=8)

pins = [8,10,12,16] #Puldi kontroll pinnid
def controller(gpio):
  global directions
  if(gpio == 8):   #alla
   directions = [1,0]
  elif(gpio == 10): #ülesse
   directions = [0,-1]
  elif(gpio == 12): #paremale
   directions = [0,1]
  elif(gpio == 16): #vasakule
   directions = [-1,0]
  
  
for index in pins:
   gpio.setup(index,gpio.IN,pull_up_down=gpio.PUD_DOWN) #muudab kontrolleri pinnid sisendiks
   gpio.add_event_detect(index, gpio.RISING, callback=controller) #Käivitab funktsiooni kui on kontrolleri pinnides voolu muutus


def gameOver():
  points = str(len(snake)-1)
  show_message(device, points, fill="red", scroll_delay=0.5)
  
  startPoint()
  
startPoint()


def foodSpawn():
  global food, snake
  snakeFood = False
  x = randint(0,width)
  y = randint(0, height)
  while snakeFood == False:
    food = [x, y]
    snakeFood = True
    for possision in snake:
      if(possision == food):
        foodSnake = False
  
  
  def startPoint():
  global snake, directions, food
  snake = [4,4]
  directions = [0,0]
  while directions == [0,0]:
    show_message(device, "START", fill="red", scroll_delay=0.5)
  foodSpawn()

  
while True:
  Pause = False
  newSnake = [snake[0][0]+directions[0], snake[0][1]+directions[1]]
  for index in snake:
    if(index == newSnake):
      gameOver()
      pass

  if(newSnake == food):
     foodSpawn()
     Pause = True

  else:
     snake.pop()
  snake.insert(0,newSnake)

  if(snake[0][0] > width or snake[0][1]):
    gameOver()
    pass
  elif(height or snake[0][0] < 0 or snake[0][1] < 0 ):
    gameOver()
    pass


  device.clear()
  
   with canvas(device) as draw:
      for index in snake:
        dither=True
        draw.point(food, fill ="red")
        draw.point(index, fill ="red")

  if(Pause == False):
    newLength = (len(snake)-2)*0.01
    time.sleep(0.5-newLength)
  else:
    time.sleep(0.4)
